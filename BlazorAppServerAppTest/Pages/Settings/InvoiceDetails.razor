@page "/invoice_details"

<div class="card" id="ticketsTable">
    <div class="card-header border-bottom border-200 px-0">
        <div class="d-lg-flex justify-content-between">
            <div class="row flex-between-center gy-2 px-x1">
                <div class="col-auto pe-0">
                    <h6 class="mb-0">
                        Search
                    </h6>
                </div>
                <div class="col-auto">
                    <form>
                        <div class="input-group input-search-width">
                            <input class="form-control form-control-sm shadow-none" type="search" placeholder="Search by name" aria-label="search" @bind="InvoiceNumberSearch" />
                            <button type="button" class="btn btn-sm btn-outline-secondary border-300 hover-border-secondary" @onclick="()=>LoadInvoice()"><span class="fa fa-search fs-10"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row flex-between-center gy-2 px-x1">
                <div class="col-auto pe-0">
                    <h5 class="mb-0">
                        Invoice Details
                    </h5>
                </div>
            </div>
            <div class="border-bottom border-200 my-3"></div>
            <div class="d-flex align-items-center justify-content-between justify-content-lg-end px-x1">
                @* <button class="btn btn-sm btn-falcon-default" type="button"><span class="fas fa-filter" data-fa-transform="shrink-4 down-1"></span><span class="ms-1 d-none d-sm-inline-block">Filter</span></button> *@
                @*   <div class="bg-300 mx-3 d-none d-lg-block" style="width:1px; height:29px"></div> *@
                @*   <div class="d-none" id="table-ticket-actions">
                <div class="d-flex">
                <select class="form-select form-select-sm" aria-label="Bulk actions">
                <option selected="">Bulk actions</option>
                <option value="Refund">Refund</option>
                <option value="Delete">Delete</option>
                <option value="Archive">Archive</option>
                </select>
                <button class="btn btn-falcon-default btn-sm ms-2" type="button">Apply</button>
                </div>
                </div> *@
                <div class="d-flex align-items-center" id="table-ticket-replace-element">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-falcon-default dropdown-toggle dropdown-caret-none" type="button" id="dashboard-layout" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false" data-bs-reference="parent"><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block me-1 table-layout">Table View</span><span class="fas fa-chevron-down" data-fa-transform="shrink-3 down-1"></span></button>
                        <div class="dropdown-menu dropdown-toggle-item dropdown-menu-end border py-2" aria-labelledby="dashboard-layout" role="tablist"><a class="dropdown-item active" id="tableView" data-bs-toggle="tab" href="#table-view" role="tab" aria-controls="table-view">Table View</a><a class="dropdown-item" id="cardView" data-bs-toggle="tab" href="#card-view" role="tab" aria-controls="card-view">Card View</a></div>
                    </div>

                    <a class="btn btn-falcon-default btn-sm mx-2" href="create_invoice"><span class="fas fa-plus" data-fa-transform="shrink-3"></span><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block ms-1">New</span></a>
                    @* <button class="btn btn-falcon-default btn-sm" type="button"><span class="fas fa-external-link-alt" data-fa-transform="shrink-3"></span><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block ms-1">Edit</span></button> *@
                    @*  <div class="dropdown font-sans-serif ms-2">
                    <button class="btn btn-falcon-default text-600 btn-sm dropdown-toggle dropdown-caret-none" type="button" id="preview-dropdown" data-bs-toggle="dropdown" data-boundary="viewport" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs-11"></span></button>
                    <div class="dropdown-menu dropdown-menu-end border py-2" aria-labelledby="preview-dropdown">
                    <a class="dropdown-item" href="#!">View</a><a class="dropdown-item" href="#!">Export</a>
                    <!-- Remove Button -->
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#confirmModal">
                    Remove
                    </button>
                    </div>
                    </div> *@
                </div>
            </div>
        </div>
    </div>
    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Confirm Removal</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove this item?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger btn-sm" id="confirmRemove">Remove</button>
                </div>
            </div>
        </div>
    </div>
    <div class="tab-content" id="ticketViewContent">
        @if (isLoading)
        {
            <p>Loading...</p>
        }
        else if (errorMessage != null)
        {
            <p>An error occurred: @errorMessage</p>
        }
        else
        {
            <div class="fade tab-pane active show" id="table-view" role="tabpanel" aria-labelledby="tableView">
                <div class="card-body p-0">
                    <div class="table-responsive scrollbar">
                        <table class="table table-sm mb-0 fs-10 table-view-tickets">
                            <thead class="bg-body-tertiary">
                                <tr>
                                    <th class="text-800 sort align-middle ps-4" data-sort="action">Action</th>
                                    <th class="text-800 sort align-middle ps-2" data-sort="name">Invoice No</th>             
                                    <th class="text-800 sort align-middle ps-2" data-sort="gmail">Client Name</th>
                                    <th class="text-800 sort align-middle ps-2" data-sort="statename">Total Ammount</th>
                                    <th class="text-800 sort align-middle ps-2" data-sort="occupation">Paid Ammount</th>
                                    <th class="text-800 sort align-middle ps-2" data-sort="address">Due Ammount</th>
                                    <th class="text-800 sort align-middle ps-2" data-sort="mobile">Date</th>
                                   
                                </tr>
                            </thead>
                            <tbody class="list" id="table-ticket-body">
                                @foreach (var item in invoiceList)
                                {
                                    <tr>
                                        <td class="align-middle fs-9 py-3">
                                            <div class="form-check mb-0">


                                                <a @onclick="()=>DeleteItem(item.InvoiceId)" class="btn btn-falcon-default btn-sm ">
                                                    <i class="fa fa-trash text-danger" aria-hidden="true"></i>
                                                </a>
                                                <a class="btn btn-falcon-default btn-sm" href="create_invoice/@item.InvoiceKey"><span class="fas fa-external-link-alt" data-fa-transform="shrink-3"></span><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block ms-1"></span></a>
                                                <a class="btn btn-falcon-default btn-sm" href="customer_history_details">H.</a>
                                               

                                            </div>
                                        </td>
                                        <td class="align-middle client white-space-nowrap pe-3 pe-xxl-4 ps-2">
                                            <div class="d-flex align-items-center gap-2 position-relative">
                                               @*  <div class="avatar avatar-xl avatar-xl">
                                                    @if (item.CustImgLink is not null)
                                                    {
                                                        <img class="rounded-circle" src="@item.CustImgLink" alt="" />
                                                    }
                                                    else
                                                    {
                                                        <img src="/assets/commonimage/no-image.png" />
                                                    }


                                                </div> *@
                                                <h6 class="mb-0">@item.InvoiceNumber</h6>
                                            </div>
                                        </td>
                                        <td class="align-middle subject py-2 pe-4">@item.SalesByName</td>
                                        <td class="align-middle subject py-2 pe-4">@item.TotalAmount</td>
                                        <td class="align-middle subject py-2 pe-4">@item.TotalPayable</td>
                                        <td class="align-middle subject py-2 pe-4">@item.DueAmount</td>
                                        <td class="align-middle subject py-2 pe-4">@item.InvoiceDateTime</td>
                                        
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="text-center d-none" id="tickets-table-fallback">
                            <p class="fw-bold fs-8 mt-3">No ticket found</p>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="pagination d-none"></div>
                        <div class="col-md-8">
                            <div class="row">
                                <div class="col-md-6">
                                    <span class="d-none d-sm-inline-block me-2 fs-10">page @currentPage of @totalPages, Total Record @TotalRecord </span>

                                </div>
                                <div class="col-md-2">

                                    <PageSizeSelection SelectedPageSize="@PageSize" SelectedPageSizeChanged="HandlePageSizeChanged" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="col-auto d-flex justify-content-end">

                                <PaginationV2 TotalPages="totalPages" CurrentPage="currentPage" OnPageChange="ChangePage" />

                            </div>
                        </div>

                    </div>

                </div>
             
            </div>
        }

        
    </div>
        

</div>

@code {
    private bool showOverlay = false;

    private string overlayDisplay => showOverlay ? "block" : "none";

    private void ToggleOverlay()
    {
        showOverlay = !showOverlay;
    }
    // private string DisplayView = "block";
    // private string AddView = "none";
    // private void ToggleVisibility()
    // {
    //     DisplayView = (DisplayView == "block") ? "none" : "block";
    //     AddView = (AddView == "block") ? "none" : "block";
    // }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    [Inject]
    protected IJSRuntime JSRuntime { get; set; }

    [Inject]
    InvoiceService _invoiceService { get; set; }
    List<Invoice> invoiceList = new List<Invoice>();
   

    private bool isLoading = true;

    private int PageSize { get; set; } = 5; // Number of items per page

    int totalPages { get; set; }

    int currentPage = 1; // Example current page

    private string errorMessage;

    private int TotalRecord { get; set; }

    public string? InvoiceNumberSearch { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadInvoice();

    }
    private void NavigateToCreatePage()
    {
        NavigationManager.NavigateTo("/create_invoice");
    }


    private async Task LoadInvoice()
    {
        try
        {
            if (InvoiceNumberSearch == "") { InvoiceNumberSearch = null; }
            invoiceList = (await _invoiceService.Get(null, null, null, InvoiceNumberSearch, null, null, null, null, null, currentPage, PageSize)).ToList();
            if (invoiceList.Count > 0)
            {
                TotalRecord = invoiceList[0].total_row;
                //  totalPages = TotalRecord / PageSize;
                totalPages = (int)Math.Ceiling((double)TotalRecord / PageSize);
            }
            else
            {
                TotalRecord = 0;
                totalPages = 0;
            }

        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
            StateHasChanged(); // Ensure UI reflects changes
        }



    }


    public async void ChangePage(int pageNumber)
    {
        currentPage = pageNumber;
        await LoadInvoice();

    }
    void HandlePageSizeChanged(int newSize)
    {
        PageSize = newSize;
        ChangePage(1);

    }
    private async Task DeleteItem(long InvoiceId)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("showDeleteConfirmation");
        if (confirmed)
        {
            try
            {
                bool result = await _invoiceService.Delete(InvoiceId);
                if (result)
                {
                    await JSRuntime.InvokeVoidAsync("showSuccessMessage");
                    await LoadInvoice();
                }
                else
                {
                    errorMessage = $"{MessageManager.DeleteFaild} {InvoiceId}.";
                }
            }
            catch (Exception ex)
            {
                errorMessage = ex.Message;
            }
        }
        else
        {

        }
    }
}


