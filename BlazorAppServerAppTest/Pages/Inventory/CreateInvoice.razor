@page "/create_invoice"
@using Pms.Models.Entity
 


<div class="offcanvas offcanvas-end" id="offcanvasRight" tabindex="-1" aria-labelledby="offcanvasRightLabel" style="width: 55%;">
    <div class="offcanvas-header">
       @*  <div class="card-header">
            <h5 class="mb-0" data-anchor="data-anchor">
                <i class="fas fa-arrow-left"></i>
                Customer/Buyer Profile
            </h5>
        </div> *@
        <button class="btn-close text-reset" type="button" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body bg-body-tertiary">
        <CustomerEntry/>
    </div>
</div>

<div class="offcanvas offcanvas-end" id="offcanvasRight-1" tabindex="-1" aria-labelledby="offcanvasRightLabel" style="width: 50%;">
    <div class="offcanvas-header">
        <div class="card-header">
            <h5 class="mb-0" >
               @*  <i class="fas fa-arrow-left"></i> *@
                Choose Product
            </h5>
        </div>
        <button class="btn-close text-reset" type="button" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content border-0">
                <div class="modal-body p-0">
                    <div class="d-lg-flex justify-content-between">
                        <div class="row flex-between-center gy-2 px-1 mb-2">
                            <div class="col-auto pe-0">
                                <div class="input-group" style="max-width: 350px; width: 100%;">
                                    <input class="form-control form-control-sm shadow-none"
                                           type="search"
                                           placeholder="Search by Name/SKU/Code"
                                           aria-label="search"
                                           @bind="srchQuery"
                                           @oninput="OnProductSearchInOffCanva" />

                                    <button type="button" class="btn btn-sm btn-outline-secondary border-300 hover-border-secondary">
                                        <span class="fa fa-search fs-10"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                            <div class="row g-0">


                        @foreach (var item in FilteredItemsOffCanva)
                        {
                            <div class="col-md-4 ps-md-2">
                                <div class="card mb-3 zoom-card">
                                    @* <div class="card-header">
                                        <h5 class="mb-0">Laptop</h5>
                                    </div> *@
                                    <div class="card-body bg-body-tertiary">
                                        <div class="tab-content">
                                            <div class="tab-pane preview-tab-pane active" role="tabpanel">
                                                <div class="avatar avatar-4xl mb-3">
                                                    <img class="rounded-soft" src="assets/img/products/1.jpg" alt="Product Image" />
                                                </div>
                                                <!-- Additional Product Information -->
                                                <div class="product-info">
                                                    <p class="mb-1"><strong>Category:</strong> @item.ProdCtgName</p>
                                                    <p class="mb-1"><strong>Brand:</strong> BrandName</p>
                                                    <p class="mb-1"><strong>Name:</strong> @item.ProdName</p>
                                                    <p class="mb-1"><strong>Price:</strong> @item.SellingPrice</p>
                                                    <p class="mb-1"><strong>SKU:</strong> @item.Sku</p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-end mt-3">
                                            <button class="btn btn-sm btn-falcon-primary" type="button" @onclick="() => OnSelectProduct(item)">
                                                Add
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>



                        }
                          
                         
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* <div class="card-footer">
        <div class="row">
            <div class="pagination d-none"></div>
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-6">
                        <span class="d-none d-sm-inline-block me-2 fs-10">page 1 of 1, Total Record 9 </span>

                    </div>
                    <div class="col-md-2">

                        <PageSizeSelection SelectedPageSize="1" SelectedPageSizeChanged="HandlePageSizeChanged" />
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="col-auto d-flex justify-content-end">

                    <PaginationV2 TotalPages="1" CurrentPage="5" OnPageChange="ChangePage" />

                </div>
            </div>

        </div>

    </div> *@
</div>

<div class="offcanvas offcanvas-end" id="offcanvasRight-2" tabindex="-1" aria-labelledby="offcanvasRightLabel" style="width: 50%;">
    <div class="offcanvas-header">
        <div class="card-header">
            <h5 class="mb-0">
                @*  <i class="fas fa-arrow-left"></i> *@
                Choose Product
            </h5>
        </div>
        <button class="btn-close text-reset" type="button" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
         <Pms.Pages.Settings.ProductSerialNumbersCmnt/>
    </div>
    @* <div class="card-footer">
    <div class="row">
    <div class="pagination d-none"></div>
    <div class="col-md-8">
    <div class="row">
    <div class="col-md-6">
    <span class="d-none d-sm-inline-block me-2 fs-10">page 1 of 1, Total Record 9 </span>

    </div>
    <div class="col-md-2">

    <PageSizeSelection SelectedPageSize="1" SelectedPageSizeChanged="HandlePageSizeChanged" />
    </div>
    </div>
    </div>
    <div class="col-md-4">
    <div class="col-auto d-flex justify-content-end">

    <PaginationV2 TotalPages="1" CurrentPage="5" OnPageChange="ChangePage" />

    </div>
    </div>

    </div>

    </div> *@
</div>
    <div class="card mb-3">
    <div class="card-header">
        <h5 class="mb-0" data-anchor="data-anchor">
            <i class="fas fa-arrow-left"></i>
            Create Invoice
        </h5>
    </div>
    <div class="card-body bg-body-tertiary">
        <div class="tab-content">
            <div class="row g-3">
                <div class="col-lg-10 col-md-10 col-sm-10 col-10">
                    <EditForm Model="@invoice" OnValidSubmit="SaveOrUpdate">
                        <DataAnnotationsValidator />
                       
                      <div class="row g-3">
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label for="InvoiceType" class="form-label fw-semi-bold">Invoice Type</label><span class="error-star">*</span>
                                <InputSelect @bind-Value="invoice.InvoiceTypeId" class="form-select form-rounded form-select-sm ">
                                    <option value="">Select Invoice Type</option>
                                    @foreach (var item in invoiceType_list)
                                        {
                                        <option value="@item.InvoiceTypeId">@item.InvoiceTypeName</option>
                                        }
                                </InputSelect>
                             
                                <ValidationMessage class="text-danger" For="@(() => invoice.InvoiceTypeId)" />
                            </div>
                        </div>

                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                                <div class="input-group">
                                <label for="customerMobileNo" class="form-label fw-semi-bold">Customer Mobile No</label><span class="error-star">*</span>

                                
                                    @*  <input  readonly name="customerMobileNo" type="text" class="form-control form-control-sm form-rounded "
                                       placeholder="customer mobile no" required aria-label="Input group example" id="inputField" aria-describedby="plusButton"> *@
                                    <div class="position-relative">
                                        <SearchComponent T="Customers"
                                                         Items="Customers_list"
                                                         DisplayProperty="obj => obj.MobileNo"
                                                         Placeholder="Search Cust"
                                                         InputSize="width:13rem;"
                                                         OnItemSelected="OnItemSelected" />


                                        <button class="btn btn-sm btn-light position-absolute top-0 end-0 h-100" type="button" id="plusButton" data-bs-toggle="offcanvas"
                                                data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
                                            +
                                        </button>


                                    </div>

                                    
                                    <ValidationMessage class="text-danger" For="@(() => invoice.InvoiceNumber)" />
                                    @* <input type="text" id="inputField" class="form-control" placeholder="Enter value" aria-label="Enter value" > *@
                                   
                                
                                
                                @*  <button data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"></button> *@
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label for="name" class="form-label fw-semi-bold">Customer Email</label>
                                <input  type="text" class="form-control form-control-sm form-rounded fw-semi-bold"
                                @bind-value="CustomerEmail"
                                placeholder="Customer Email">
                            </div>
                               
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label for="paymentType" class="form-label fw-semi-bold">Notification Send By</label><span class="error-star">*</span>
                                <InputSelect @bind-Value="invoice.NotificationById" class="form-select form-rounded form-select-sm ">
                                    <option value="">Select Notification</option>
                                    @foreach (var item in notificationBy_list)
                                        {
                                        <option value="@item.NotificationById">@item.NotificationByName</option>
                                        }
                                </InputSelect> 
                            </div>
                                <ValidationMessage class="text-danger" For="@(() => invoice.NotificationById)" />
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label class="form-label fw-semi-bold">Date</label>
                                <InputDate class="form-control form-control-sm form-rounded fw-semi-bold"
                                     
                                       name="entryDate"  @bind-Value="invoice.InvoiceDateTime" 
                                       placeholder="Date"/>
                            </div>
                        </div>

                      
                        <div class="col-lg-3 col-md-3 col-sm-6 col-9 animated-div">
                            <div class="form-group">
                                <label for="salesBy" class="form-label fw-semi-bold">Seller</label>
                                <InputText @bind-Value="invoice.SalesByName" readonly name="salesBy" type="text" class="form-control form-control-sm form-rounded fw-semi-bold" placeholder="seller" required />
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label for="paymentType" class="form-label fw-semi-bold">Payment Type</label><span class="error-star">*</span>
                                <InputSelect @bind-Value="invoice.PaymentTypeId" class="form-select form-rounded form-select-sm ">
                                    <option value="">Select Payment Type</option>
                                    @foreach (var item in PaymentTypes_list)
                                    {
                                        <option value="@item.PaymentTypeId">@item.PaymentTypesName</option>
                                    }
                                </InputSelect>
                            </div>
                                <ValidationMessage class="text-danger" For="@(() => invoice.PaymentTypeId)" />
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label for="categorySelect" class="form-label fw-semi-bold">Category</label>
                                <select class="form-select form-rounded form-select-sm ">
                                    <option value="">Select Category</option>
                                    @foreach (var item in productCategory_list)
                                    {
                                        <option value="@item.ProdCtgId">@item.ProdCtgName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        
                        <div class="col-lg-3 col-md-3 col-sm-9 col-9 animated-div">
                            <div class="form-group">
                                <label for="categorySelect" class="form-label fw-semi-bold">Sub Category</label>
                                <select class="form-select form-rounded form-select-sm ">
                                    <option value=""> Select Sub Category</option>
                                    @foreach (var item in productSubCategory_list)
                                    {
                                        <option value="@item.ProdSubCtgId">@item.ProdSubCtgName</option>
                                    }
                                </select>
                                  
                            </div>
                        </div >
                       
                        <div class="col-lg-4 col-md-4 col-sm-6 col-9 animated-div" >
                               @*  <ProductSearcherByName Placeholder="Search for Name..." OnItemSelected="OnSelectProduct" /> *@
                                <div class="form-group">
                                    <label for="chooseProduct" class="form-label fw-semi-bold">Search by Name/Sku/Code</label><span class="error-star">*</span>
                                    <div class="position-relative input-group">
                                        <!-- Search Input -->
                                        <input class="form-control form-control-sm form-rounded search-input fw-semi-bold"
                                               type="search"
                                               placeholder="Search for Name/Sku/Code..."
                                               aria-label="Search Product Name"
                                               @bind="SearchQuery"
                                               @onclick="OnInputClick"
                                               @oninput="OnSearchInput" />

                                        <!-- Button inside the input -->
                                        <button class="btn btn-sm btn-light" type="button" id="plusButton" data-bs-toggle="offcanvas"
                                                data-bs-target="#offcanvasRight-1" aria-controls="offcanvasRight-1">
                                            +
                                        </button>
                                    </div>

                                    <div class="dropdown-menu border font-base start-0 mt-2 py-0 overflow-hidden w-50"
                                         style="display: @(ShowDropdown && FilteredItems.Any() ? "block" : "none");">
                                        <div class="scrollbar list py-3" style="max-height: 24rem; cursor: pointer;">
                                            @if (FilteredItems.Any())
                                            {
                                                @foreach (var item in FilteredItems)
                                                {
                                                    <a class="dropdown-item fs-10 px-x1 py-1 hover-primary" @onclick="() => OnSelectProduct(item)">
                                                        <div class="d-flex align-items-center">
                                                            <div class="avatar avatar-l status-online me-2">
                                                                <img class="rounded-circle" src="assets/img/team/1.jpg" alt="" />
                                                            </div>

                                                            <div class="flex-1 d-flex align-items-center">
                                                                <h6 class="mb-0 title me-3">@item.ProdName</h6>
                                                                <p class="fs-11 fw-bold  mb-0 me-3" style="font-size: 1.25rem;">Sku: @item.Sku</p>
                                                                <p class="fs-11 fw-bold mb-0 me-3" style="font-size: 1.25rem;">Code: @item.ProductCode</p>
                                                                <p class="fs-11 fw-bold mb-0 me-3" style="font-size: 1.25rem;">Category: @item.ProdCtgName</p>
                                                                <p class="fs-11 fw-bold mb-0">Brand: @item.BrandId</p>
                                                            </div>

                                                        </div>
                                                    </a>
                                                }
                                            }
                                            else
                                            {
                                                <p class="fallback fw-bold fs-8">No Result Found.</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                           @*  <div class="input-group-append">
                                <button class="btn btn-sm btn-light" type="button" id="plusButton" data-bs-toggle="offcanvas"
                                        data-bs-target="#offcanvasRight-1" aria-controls="offcanvasRight-1">
                                    +
                                </button>
                            </div> *@
                        </div >
                        
                   
                    </div >
                        

                      <div class="row">
                        <div class="table-responsive scrollbar mt-4">
                            <table class="table table-sm mb-0 fs-10 table-view-tickets">
                                <thead class="thdchild">
                                    <tr>
                                            <th class="form-label fw-bold">
                                           Image
                                        </th>
                                            <th scope="col" class="form-label fw-bold">Category</th>

                                            <th scope="col" class="form-label fw-bold">Name</th>
                                            <th scope="col" class="form-label fw-bold">Quantity<span class="error-star"><strong class="bigger-asterisk">*</strong></span></th>
                                            <th scope="col" class="form-label fw-bold">Unit</th>
                                            <th scope="col" class="form-label fw-bold">Rate</th>
                                            <th scope="col" class="form-label fw-bold">VAT(%)</th>
                                            <th scope="col" class="form-label fw-bold">Discount(%)</th>
                                            <th scope="col" class="form-label fw-bold">Amount</th>
                                            <th scope="col" class="form-label fw-bold">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int indexx = 0;
                                    }
                                    @foreach (var itm in itemsList)
                                    {
                                        <tr>
                                            <td>
                                                <div class="col-auto">
                                                    <div class="avatar avatar-2xl">
                                                        <img class="rounded-circle" src="assets/img/products/1.jpg" alt="" />
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm form-rounded bold-input fw-semi-bold" placeholder="Category" readonly value="@itm.CategoryName">
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm form-rounded bold-input fw-semi-bold" placeholder="Name" readonly value="@itm.ProductName">
                                            </td>
                                            <td>
                                                <input type="number" class="form-control form-control-sm form-rounded bold-input fw-semi-bold"
                                                placeholder="Quantity"  @bind="itm.Quantity" @bind:event="oninput" @onchange="() => OnChangeQuantity(itm)" />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm form-rounded fw-semi-bold" readonly placeholder="Unit" @bind="@itm.Unit" >
                                            </td>
                                            <td>
                                                <input type="number" class="form-control form-control-sm form-rounded fw-semi-bold" placeholder="Rate" @bind="@itm.SellingPrice">
                                            </td>
                                            <td>
                                                <input type="number" readonly class="form-control form-control-sm form-rounded fw-semi-bold" placeholder="V(%)" @bind="@itm.VatPercentg">
                                            </td>
                                            <td>
                                                <input type="number" class="form-control form-control-sm form-rounded fw-semi-bold" placeholder="D(%)" @bind="@itm.DiscountPercentg">
                                            </td>
                                            <td>
                                                <input readonly type="number" class="form-control form-control-sm form-rounded bold-input fw-semi-bold"
                                                placeholder="Amount" @bind="itm.TotalPrice">
                                            </td>
                                            <td class="treeview">
                                                <div class="treeview-list-item" style="margin-top:auto;margin-right:0">
                                                      <a data-bs-toggle="collapse" href="#treeviewExample-1_@indexx" role="button" aria-expanded="false">
                                                     <p class="treeview-text">Serial </p>
                                                 </a>
                                                </div>
                                              
                                            </td>
                                            <td>
                                                <button title="Info" class="btn btn-sm a-light" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                                                    <i class="fa fa-info-circle" style="font-size:18px"></i>
                                                </button>
                                            </td>
                                            <td>
                                                <button title="Delete" class="btn btn-sm btn-light"  @onclick="() => DeleteItem(itm)">
                                                    <i class="far fa-trash-alt fa-lg text-danger"></i>
                                                </button>
                                            </td>
                                            
                                        </tr>
                                        <tr>
                                            <td  colspan="12">
                                                <div class="treeview" id="treeviewExample_@indexx">
                                                    <div class="treeview-list-item">
                                                       
                                                        <div class="collapse treeview-list" id="treeviewExample-1_@indexx">
                                                            <div class="treeview-list-item">
                                                                <div class="table-responsive scrollbar row">
                                                                <div class="col-sm-8 col-md-8 col-lg-8 col-xl-8">
                                                                        <table class="table table-hover">
                                                                            <thead>
                                                                                <tr>
                                                                                    <th class="fw-semi-bold" scope="col">Product Name</th>
                                                                                    <th scope="col">Serial No</th>
                                                                                    <th scope="col">Supplier Org </th>
                                                                                    <th scope="col">Action</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                <tr class="hover-actions-trigger">
                                                                                    <td class="align-middle text-nowrap">
                                                                                        <div class="d-flex align-items-center">
                                                                                            <div class="avatar avatar-xl">
                                                                                                <img class="rounded-circle" src="../../assets/img/team/4.jpg" alt="" />
                                                                                            </div>
                                                                                            <div class="ms-2">Ricky Antony</div>
                                                                                        </div>
                                                                                    </td>
                                                                                    <td class="align-middle">ricky@example.com</td>
                                                                                    <td class="align-middle text-nowrap">#33GBE2345</td>
                                                                                    <td class="w-auto">
                                                                                        <div class="btn-group btn-group hover-actions end-0 me-4">
                                                                                            <button class="btn btn-tertiary pe-2" type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit"><span class="fas fa-edit"></span></button>
                                                                                            <button class="btn btn-tertiary ps-2" type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete"><span class="fas fa-trash-alt text-danger"></span></button>
                                                                                        </div>
                                                                                    </td>

                                                                                </tr>

                                                                                <tr class="hover-actions-trigger">
                                                                                    <td class="align-middle text-nowrap">
                                                                                        <div class="d-flex align-items-center">
                                                                                            <div class="avatar avatar-xl">
                                                                                                <img class="rounded-circle" src="../../assets/img/team/4.jpg" alt="" />
                                                                                            </div>
                                                                                            <div class="ms-2">Ricky Antony</div>
                                                                                        </div>
                                                                                    </td>
                                                                                    <td class="align-middle">ricky@example.com</td>
                                                                                    <td class="align-middle text-nowrap">#33GBE2345</td>
                                                                                    <td class="w-auto">
                                                                                        <div class="btn-group btn-group hover-actions end-0 me-4">
                                                                                            <button class="btn btn-tertiary pe-2" type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit"><span class="fas fa-edit"></span></button>
                                                                                            <button class="btn btn-tertiary ps-2" type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete"><span class="fas fa-trash-alt text-danger"></span></button>
                                                                                        </div>
                                                                                    </td>

                                                                                </tr>

                                                                            </tbody>
                                                                        </table>
                                                                     </div>
                                                                        <div class="col-sm-4 col-md-4 col-lg-4 col-xl-4">
                                                                            <label for="chooseSerialNumber" class="form-label fw-semi-bold">Add @itm.ProductName Serial Number</label>
                                                                            <div class="position-relative">
                                                                                <SearchComponent T="ProductSerialNumbers"
                                                                                                 Items="serialNumbers"
                                                                                                 DisplayProperty="obj => obj.SerialNumber"
                                                                                                 Placeholder="Search Serial"
                                                                                                 InputSize="width:13rem;"
                                                                                                 OnItemSelected="OnSerialNumberSelect" />
                                                                                <button class="btn btn-sm btn-light position-absolute righ-0 top-0 end-0 h-100" type="button"  data-bs-toggle="offcanvas"
                                                                                        data-bs-target="#offcanvasRight-2" aria-controls="offcanvasRight-2">
                                                                                    +
                                                                                </button>
                                                                            </div>
                                                                       
                                                                         </div>
                                                             
                                                            
                                                            </div>
                                                                
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                           
                                        </tr>

                                        indexx++;

                                    }
                                </tbody>

                            </table>
                        </div >
                    </div>
                      <div class="row align-items-center mt-2">
                        <div class="col-auto d-flex">
                                <button class="btn btn-outline-primary btn-sm me-1 mb-1" type="submit">Create Invoice</button>

                                <a href="shipping_nd_payment" class="btn btn-outline-primary btn-sm me-1 mb-1" type="button">Shipping</a>
                             
                            <button class="btn btn-outline-secondary me-1 mb-1" type="button">Refresh</button>
                        </div >
                    </div >                
                    </EditForm>
                    <div class="row mt-4">
                        
                    </div >

                </div>
                <div class="col-lg-2 col-md-2 col-sm-2 col-2">
                      <div class="form-group">
                        <label class="form-label fw-bolder">Total Quantity</label>
                        <InputNumber @bind-Value="invoice.TotalQnty" type="number" class="form-control form-control-sm form-rounded fw-bold" readonly placeholder="Total Quantity" />
                    </div>
                    <div class="form-group">
                        <label class="form-label fw-bolder">Total</label>
                        <InputNumber @bind-Value="invoice.TotalAmount" type="number" class="form-control form-control-sm form-rounded fw-bold" readonly placeholder="Total Amount" />
                    </div>
                    <div class="form-group">
                        <label class="form-label fw-bold">Vat</label>
                        <InputNumber  @bind-Value="invoice.TotalVat" type="number" class="form-control form-control-sm form-rounded fw-bold" readonly placeholder="Vat(%)"/>
                    </div>
                    <div class="form-group">
                        <label class="form-label fw-bold">Discount</label>
                        <InputNumber @bind-Value="invoice.TotalDiscount" type="number" class="form-control form-control-sm form-rounded fw-bold" readonly placeholder="Discount(%)"/>
                    </div>
                    <div class="form-group">
                        <label class="form-label fw-bold">Additional Discount</label>
                        <InputNumber @bind-Value="invoice.TotalAddiDiscount" type="number"
                        class="form-control form-control-sm form-rounded fw-bold" 
                        placeholder="Additional Discount" @oninput="OnChangeAddiDiscount"/>
                    </div>

                    <div class="form-group">
                        <label class="form-label fw-bolder">Total Payable</label>
                        <InputNumber @bind-Value="invoice.TotalPayable" type="number" class="form-control form-control-sm form-rounded fw-bold" placeholder="Total Payable"/>
                    </div>
                    <div class="form-group">
                        <label class="form-label fw-bolder">Receive</label>
                        <InputNumber @bind-Value="invoice.RecieveAmount" type="number" class="form-control form-control-sm form-rounded fw-bold" 
                        placeholder="Receive" @oninput="OnChangeReceiveAmount"/>
 
                    </div>
                    <div class="form-group">
                        <label class="form-label fw-bolder">Current Due</label>
                        <InputNumber @bind-Value="invoice.DueAmount" type="number"
                        class="form-control form-control-sm form-rounded fw-bold" placeholder="Current Due"/>
                    </div>
                </div >

                 

            </div>
        </div>

        <div class="border-bottom border-dashed my-5"></div>
        <div class="row">
            <div class="col-md-7 col-xl-12 col-xxl-7 px-md-3 mb-xxl-0 position-relative">
                <div class="d-flex">
                    <img class="me-3" src="../../assets/img/icons/shield.png" alt="" width="60" height="60" />
                    <div class="flex-1">
                        <h5 class="mb-2">Buyer/Customer Protection</h5>
                        <div class="form-check mb-0">
                            <input class="form-check-input" id="protection-option-1" type="checkbox" checked="checked" />
                            <label class="form-check-label mb-0" for="protection-option-1"> <strong>Full Refund </strong>If you don't <br class="d-none d-md-block d-lg-none" />receive your order</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" id="protection-option-2" type="checkbox" checked="checked" />
                            <label class="form-check-label mb-0" for="protection-option-2"> <strong>Full or Partial Refund, </strong>If the product is not as described in details</label>
                        </div><a class="fs-10 ms-3 ps-2" href="#!">Learn More<span class="fas fa-caret-right ms-1" data-fa-transform="down-2">    </span></a>
                    </div>
                </div>
                <div class="vertical-line d-none d-md-block d-xl-none d-xxl-block"> </div>
            </div>
            <div class="col-md-5 col-xl-12 col-xxl-5 ps-lg-4 ps-xl-2 ps-xxl-5 text-center text-md-start text-xl-center text-xxl-start">
                <div class="border-bottom border-dashed d-block d-md-none d-xl-block d-xxl-none my-4"></div>
                <div class="fs-7 fw-bold">All Total: <span class="text-primary">$3320</span></div>
                <a href="digital_payment" class="btn btn-success mt-3 px-5" type="submit">Confirm &amp; Pay</a>
                <p class="fs-10 mt-3 mb-0">By clicking <strong>Confirm & Pay </strong> button you agree to the <a href="#!">Terms &amp; Conditions</a></p>
            </div>
        </div>
    </div >
</div  >

<div class="modal fade" id="staticBackdrop" data-bs-keyboard="false" data-bs-backdrop="static" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg mt-6" role="document">
        <div class="modal-content border-0">
            <div class="position-absolute top-0 end-0 mt-3 me-3 z-1">
                <button class="btn-close btn btn-sm btn-circle d-flex flex-center transition-base" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="card">
                    <div class="card-header bg-body-tertiary">
                        <h5 class="mb-0" data-anchor="data-anchor">Product details</h5>
                    </div>
                    
                            <div class="row">
                        <div  class="col-lg-4">

                            <div class="col">
                                            <h3 class="text-primary mt-4 mt-sm-0">Item</h3>
                                            <p class="fs-10 bold-text ">Vat Amount:</p>
                                            <p class="fs-10 bold-text ">Discount Amount:</p>
                                            <p class="fs-10 bold-text ">Date:</p>
                                            <p class="fs-10 bold-text ">Warranty:</p>
                                            <p class="fs-10 bold-text ">Link to Supplier:</p>
                                            <p class="fs-10 bold-text ">Remarks:</p>
                                            <p class="fs-10 bold-text ">Descriptions:</p>
                                            <p class="fs-10 bold-text ">Imported From:</p>
                                            <p class="fs-10 bold-text ">Category : </p>
                                          
                                        </div>
                                        @* <div class="col-sm-auto"><img class="timeline-item-media rounded" src="../../assets/img/gallery/2000.jpg" width="188" height="250" alt="" /></div> *@
                                   
                                </div>
                               <div class="col-lg-4">
                            <p class="fs-10 bold-text ">Sub Category:</p>
                            <p class="fs-10 bold-text ">Name/ Model:</p>
                            <p class="fs-10 bold-text ">Buying Price:</p>
                            <p class="fs-10 bold-text ">Selling Price:</p>
                            <p class="fs-10 bold-text ">Unit Type:</p>
                            <p class="fs-10 bold-text ">Opening Quantity:</p>
                            <p class="fs-10 bold-text ">Alert Quantity:</p>
                            <p class="fs-10 bold-text ">Vat (in %):</p>
                            <p class="fs-10 bold-text ">Discount(%):</p>
                        </div>
                                <div class="col-md-4">
                                    <div class=""><img class="" src="../../assets/img/gallery/2000.jpg" width="200" height="200" alt="" /></div>
                                </div>
                    </div>
                            
                       
                </div>
            </div>
        </div>
    </div>
</div >

 
<script>
    function setupClickOutside(dotnetHelper) {
        document.addEventListener('click', function (event) {
            const searchInput = document.querySelector('.form-select');
            const dropdown = document.querySelector('.dropdown-menu');

            if (searchInput && dropdown && !searchInput.contains(event.target) && !dropdown.contains(event.target)) {
                dotnetHelper.invokeMethodAsync('HideDropdown');
            }
        });
    }
</script>

@code {
    [Inject]
    InvoiceService _invoiceService { get; set; }
    Invoice invoice = new Invoice();//object or Model

    [Inject]
    InvoiceItemService _invoiceItemService { get; set; }
    InvoiceItems invoiceItem = new InvoiceItems();// 
    List<InvoiceItems> itemsList = new List<InvoiceItems>();

    [Inject]
    ProductService _productService { get; set; }
    List<Products> products = new List<Products>();

    [Inject]
    NotificationByService _notificationByService { get; set; }
    List<NotificationBy> notificationBy_list = new List<NotificationBy>();

    [Inject]
    InvoiceTypeService invoiceTypeService { get; set; }
    List<InvoiceType> invoiceType_list = new List<InvoiceType>();

    [Inject]
    ProductCategoryService productCategoryService { get; set; }
    List<ProductCategories> productCategory_list = new List<ProductCategories>();

    [Inject]
    ProductSubCategoryService productSubCategoryService { get; set; }
    List<ProductSubCategory> productSubCategory_list = new List<ProductSubCategory>();


    [Inject]
    PaymentTypesService paymentTypesService { get; set; }
    List<PaymentTypes> PaymentTypes_list = new List<PaymentTypes>();

    [Inject]
    CustomerService _customerService { get; set; }
    List<Customers> Customers_list = new List<Customers>();
    //Customers customer=  new Customers();

    private bool showSuccessAlert = false;
    private bool showDangerAlert = false;

    public string SuccessMessage { get; set; }
    public string DangerMessage { get; set; }

    private string errorMessage;

    private string CustomerEmail; 

    private string SearchQuery { get; set; } = string.Empty;
    private string srchQuery { get; set; } = string.Empty;

    private List<Products> FilteredItems { get; set; } = new List<Products>();
    private List<Products> FilteredItemsOffCanva { get; set; } = new List<Products>();
    //private List<Products> Items { get; set; } = new List<Products>();
    private bool ShowDropdown { get; set; } = false;
    private bool ShowCloseIcon { get; set; } = false;

    private List<ProductSerialNumbers> serialNumbers = new List<ProductSerialNumbers>();
    [Inject]
    ProductSerialNumbersService _productSerialNumbersService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        invoiceType_list = (await invoiceTypeService.Get(null, null, null, null, 1, 1000)).ToList();
        notificationBy_list = (await _notificationByService.Get(null)).ToList();
        productCategory_list = (await productCategoryService.Get(null,null, null, null, 1, 1000)).ToList();
        productSubCategory_list = (await productSubCategoryService.Get(null, null, null, null, null, 1, 1000)).ToList();
        PaymentTypes_list = (await paymentTypesService.Get(null, null, null, null, 1, 1000)).ToList();
        products = (await _productService.Get(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, 1000)).ToList();
        Customers_list=(await _customerService.Get(null, null,null, null, null, null,null, 1, 1000)).ToList();

        FilteredItems = products;
        FilteredItemsOffCanva = products;
        serialNumbers = (await _productSerialNumbersService.Get(null, null, null, null, null, null, null, null, null, null, null, 1, 5000)).ToList();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("setupClickOutside", DotNetObjectReference.Create(this));
        }
    }

    private void OnItemSelected(Customers customer)
    {
        invoice.CustomerID = customer.CustomerId;
        CustomerEmail = customer.Email;
    }
    private void OnSerialNumberSelect(ProductSerialNumbers serial)
    {
       
    }
    private async Task SaveOrUpdate()
    {
        try
        { 
            invoice.BranchId = CompanyInfo.BranchId;
            invoice.InvoiceNumber = GenerateUniqueNumber();
            invoice.CurrencyId = CompanyInfo.CurrencyId;
            invoice.CustomerID = 1;
            if (invoice.InvoiceId == 0)
            {

                invoice.EntryDateTime = DateTimeHelper.CurrentDateTime();
                invoice.EntryBy = UserInfo.UserId;


                invoice.InvoiceId = await _invoiceService.SaveOrUpdate(invoice);
                if (invoice.InvoiceId > 0)
                {
                    foreach (var item in itemsList)
                    {
                        item.InvoiceId = invoice.InvoiceId;
                        await  _invoiceItemService.SaveOrUpdate(item);
                    }
                    showSuccessAlert = true;
                    SuccessMessage = MessageManager.SaveSuccess;
                    StateHasChanged(); // Notify Blazor to re-render the component
                                       //Hide the alert after 1 seconds

                    await Task.Delay(1000);
                    showSuccessAlert = false;
                }
                else if (invoice.InvoiceId == -1)
                {
                    showDangerAlert = true;
                    DangerMessage = $"{invoice.InvoiceNumber} {MessageManager.Exist}";
                }
                else
                {
                    showDangerAlert = true;
                    DangerMessage = MessageManager.SaveFaild;
                }
            }


        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }

    }
    private void OnSelectProduct(Products product)
    {
        // Check if the product already exists in the list to avoid duplicates
        var existingItem = itemsList.FirstOrDefault(item => item.ProductId == product.ProductId);
        if (existingItem != null)
        {
            // If the product exists, you might want to increase the quantity or update the item details
            existingItem.Quantity += 1; // Increment the quantity, or handle this logic as required
            existingItem.TotalPrice = existingItem.Quantity * existingItem.SellingPrice;
        }
        else
        {
            // Add new product to the list if it doesn't already exist
            itemsList.Add(new InvoiceItems
                {
                    CategoryName = product.ProdCtgName,
                    ProductName = product.ProdName,
                    ProductId = product.ProductId,
                    Quantity = 1, // Set default quantity to 1 for new products
                    Unit = product.UnitName,
                    SellingPrice = product.SellingPrice,
                    VatPercentg = product.VatPercent,
                    DiscountPercentg = product.DiscountPercentg,
                    TotalPrice = product.SellingPrice // Initialize TotalPrice based on the SellingPrice
                                                      // Add other properties as necessary
                });
        }

        // Clear the current item after adding or updating the product
        invoiceItem = new InvoiceItems();
    }

    private void DeleteItem(InvoiceItems item)
    {
        itemsList.Remove(item);
    }
    private void OnChangeQuantity(InvoiceItems item)
    {
        if (item.Quantity > 0 && item.SellingPrice > 0)
        {
            // Calculate the total price based on quantity and selling price
            item.TotalPrice = item.Quantity * item.SellingPrice;

            // If there are discounts or VAT, apply them as needed
            if (item.DiscountPercentg > 0)
            {
                // Apply discount
                //  var discountAmount = item.TotalPrice * (item.DiscountPercentg / 100);
                //  item.TotalPrice -= discountAmount;
            }

            if (item.VatAmount > 0)
            {
                // Apply VAT
                var vatAmount = item.TotalPrice * (item.VatAmount / 100);
                //   item.TotalPrice += vatAmount;
            }

            CalculateTotalInvoiceAmount();
        }


    }
    private void CalculateTotalInvoiceAmount()
    {
        invoice.TotalQnty = itemsList.Sum(item => item.Quantity);
        invoice.TotalAmount = itemsList.Sum(item => item.TotalPrice);
        invoice.TotalVat = itemsList.Sum(item => item.VatPercentg);
        invoice.TotalDiscount = itemsList.Sum(item => item.DiscountPercentg);
        invoice.TotalPayable = (invoice.TotalAmount + invoice.TotalVat) - invoice.TotalDiscount;

    }

    private void OnChangeAddiDiscount(ChangeEventArgs e)
    {
        // You can access the new value using e.Value
        decimal.TryParse(e.Value?.ToString(), out var discount);
        invoice.TotalAddiDiscount = discount;
        invoice.TotalPayable = invoice.TotalAmount + invoice.TotalVat - invoice.TotalDiscount - invoice.TotalAddiDiscount;
    }
    private void OnChangeReceiveAmount(ChangeEventArgs e)
    {
        decimal.TryParse(e.Value?.ToString(), out var recieveAmount);
        invoice.RecieveAmount = recieveAmount;
        invoice.TotalPayable = invoice.TotalAmount + invoice.TotalVat - invoice.TotalDiscount - invoice.TotalAddiDiscount;
        invoice.DueAmount=invoice.TotalPayable - invoice.RecieveAmount;
    }
    public string GenerateUniqueNumber()
    {
        Random random = new Random();
        int uniqueNumber = random.Next(1000, 10000); // Generates a number between 1000 and 9999
        return $"#{uniqueNumber}";
    }


    [JSInvokable]
    public void HideDropdown()
    {
        ShowDropdown = false;
        StateHasChanged();
    }

    private void OnSearchInput(ChangeEventArgs e)
    {
        SearchQuery = e.Value?.ToString() ?? string.Empty;
        FilterItems();
        ShowCloseIcon = !string.IsNullOrEmpty(SearchQuery);
    }

    private void FilterItems()
    {
        if (string.IsNullOrWhiteSpace(SearchQuery))
        {
            FilteredItems = products;
        }
        else
        {
            FilteredItems = products
     .Where(item => (item.Sku != null && item.Sku.Contains(SearchQuery, StringComparison.OrdinalIgnoreCase))
                 || (item.ProdName != null && item.ProdName.Contains(SearchQuery, StringComparison.OrdinalIgnoreCase))
                 || (item.ProductCode != null && item.ProductCode.Contains(SearchQuery, StringComparison.OrdinalIgnoreCase))
     )
      .ToList();

        }

        ShowDropdown = FilteredItems.Any();
    }
    private void OnProductSearchInOffCanva(ChangeEventArgs e)
    {
        if (e.Value is string value)
        {
            srchQuery = value;
            FilterProductInOffCanva(); // Call your filter method to update the items
        }
    }

    private void FilterProductInOffCanva()
    {
         
   
        if (string.IsNullOrWhiteSpace(srchQuery))
        {
            FilteredItemsOffCanva = products;
        }
        else
        {
            FilteredItemsOffCanva = products
     .Where(item => (item.Sku != null && item.Sku.Contains(srchQuery, StringComparison.OrdinalIgnoreCase))
                 || (item.ProdName != null && item.ProdName.Contains(srchQuery, StringComparison.OrdinalIgnoreCase))
                 || (item.ProductCode != null && item.ProductCode.Contains(srchQuery, StringComparison.OrdinalIgnoreCase))
     )
      .ToList();

        }

         
    }

    private async Task SelectItem(Products item)
    {
        SearchQuery = item.Sku;
        ShowDropdown = false;
        ShowCloseIcon = true;

        // Handle the selected product here, for example by adding it to your invoice list
        await HandleSelectedProduct(item);
    }

    private Task HandleSelectedProduct(Products item)
    {
        // Your logic to handle the selected product in the invoice creation process
        return Task.CompletedTask;
    }

    private void OnInputClick()
    {
        ShowDropdown = true;
        StateHasChanged();
    }

}