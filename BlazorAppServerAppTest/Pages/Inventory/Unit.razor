@page "/unit"
 
<!-- Right Offcanvas-->
@* <button class="btn btn-primary mb-1" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Right Offcanvas</button> *@
<div class="offcanvas offcanvas-end" id="offcanvasRight" tabindex="-1" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        @*   <h5 id="offcanvasRightLabel">Offcanvas right</h5> *@
        <div class="card-header">
            <h5 class="mb-0">Experiences</h5>
        </div>
        <button class="btn-close text-reset" type="button" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="col-lg-12 ps-lg-2 mb-3">
            <div class="row g-0 h-100 align-items-stretch">
                <div class="col-lg-12 mb-3">
                    <div class="card h-100">

                        <div class="card-body bg-body-tertiary pb-0">
                            <a class="mb-4 d-block d-flex align-items-center" href="#experience-form" data-bs-toggle="collapse" aria-expanded="true" aria-controls="experience-form"><span class="circle-dashed"><span class="fas fa-plus"></span></span><span class="ms-3">Add new Unit</span></a>
                            <div class="collapse show" id="experience-form">
                                <EditForm Model="@unit" OnValidSubmit="SaveOrUpdate">
                                    <DataAnnotationsValidator />
                                    <div class="row">
                                        <div class="col-3 mb-3 text-lg-end">
                                            <label class="form-label" for="unitName">Unit Name</label>
                                        </div>
                                        <div class="col-9 col-sm-7 mb-3">
                                            <InputText  class="form-control form-control-sm" id="unitName" @bind-Value="@unit.UnitName" />
                                            <ValidationMessage class="text-danger" For="@(() => unit.UnitName)" />
                                        </div>
                                        <div class="col-9 col-sm-7 offset-3">
                                            <button class="btn btn-primary" type="submit">Save</button>
                                        </div>
                                    </div>
                                </EditForm>
                                <div class="border-dashed-bottom my-4"></div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>


    </div>
</div>

<div class="card" id="ticketsTable">
    <div class="card-header border-bottom border-200 px-0">
        <div class="d-lg-flex justify-content-between">
            <div class="row flex-between-center gy-2 px-x1">
                <div class="col-auto pe-0">

                    <h6 class="mb-0">
                        search
                    </h6>
                </div>
                <div class="col-auto">
                    <form>
                        <div class="input-group input-search-width">
                            <input class="form-control form-control-sm shadow-none" type="search" placeholder="Search  by name" aria-label="search" />
                            <button class="btn btn-sm btn-outline-secondary border-300 hover-border-secondary"><span class="fa fa-search fs-10"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="border-bottom border-200 my-3"></div>
            <div class="d-flex align-items-center justify-content-between justify-content-lg-end px-x1">
                
                
                <div class="d-flex align-items-center" id="table-ticket-replace-element">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-falcon-default dropdown-toggle dropdown-caret-none" type="button" id="dashboard-layout" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false" data-bs-reference="parent"><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block me-1 table-layout">Table View</span><span class="fas fa-chevron-down" data-fa-transform="shrink-3 down-1"></span></button>
                        <div class="dropdown-menu dropdown-toggle-item dropdown-menu-end border py-2" aria-labelledby="dashboard-layout" role="tablist"><a class="dropdown-item active" id="tableView" data-bs-toggle="tab" href="#table-view" role="tab" aria-controls="table-view">Table View</a><a class="dropdown-item" id="cardView" data-bs-toggle="tab" href="#card-view" role="tab" aria-controls="card-view">Card View</a></div>
                    </div>

                    <a class="btn btn-falcon-default btn-sm mx-2" href="#!" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"><span class="fas fa-plus" data-fa-transform="shrink-3"></span><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block ms-1">New</span></a>
                    
                </div>
            </div>
        </div>
    </div>


    <div class="tab-content" id="ticketViewContent">

        @if (isLoading)
                {
                    <p>Loading...</p>
                }
                else if (errorMessage != null)
                {
            <p>An error occurred: @errorMessage</p>
        }
        else
        {
            <div class="fade tab-pane active show" id="table-view" role="tabpanel" aria-labelledby="tableView" data-list='{"valueNames":["client","subject","status","priority","agent"],"page":6,"pagination":true}'>
                <div class="card-body p-0">
                    <div class="table-responsive scrollbar">
                        <table class="table table-sm mb-0 fs-10 table-view-tickets">
                            <thead class="bg-body-tertiary">
                                <tr>
                                    @* <th class="py-2 fs-9 pe-2" style="width: 28px;">
                                <div class="form-check d-flex align-items-center">
                                Action  <input class="form-check-input" id="checkbox-bulk-table-tickets-select" type="checkbox" data-bulk-select='{"body":"table-ticket-body","actions":"table-ticket-actions","replacedElement":"table-ticket-replace-element"}' />
                                </div>
                                </th> *@
                                    <th class="text-800 sort align-middle ps-4" data-sort="client">Action</th>
                                    <th class="text-800 sort align-middle ps-2" data-sort="client">Unit Name</th>

                                </tr>
                            </thead>
                            <tbody class="list" id="table-ticket-body">
                                @foreach (var unt in unit_list)
                                {
                                    <tr>
                                        <td class="align-middle fs-9 py-3">
                                            <div class="form-check mb-0">
                                               
                                                <a @onclick="()=>EditLoadData(unt)" class="btn btn-falcon-default btn-sm " data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"><span class="fas fa-external-link-alt" data-fa-transform="shrink-3"></span><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block ms-1"></span></a>
                                                <a @onclick="()=>DeleteItem(unt.UnitId)" class="btn btn-falcon-default btn-sm ">
                                                        <i class="fa fa-trash text-danger" aria-hidden="true"></i>
                                                </a>
                                               
                                            </div>
                                           
                                        </td>

                                        <td class="align-middle fs-9 py-3">
                                            <div class="d-flex align-items-center gap-2 position-relative">

                                                @unt.UnitName


                                            </div>
                                        </td>

                                    </tr>
                                } 
                            </tbody>
                    </table>
                    <div class="text-center d-none" id="tickets-table-fallback">
                        <p class="fw-bold fs-8 mt-3">No ticket found</p>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row align-items-center">
                    <div class="pagination d-none"></div>
                    <div class="col"><span class="d-none d-sm-inline-block me-2 fs-10" data-list-info="data-list-info"></span></div>
                    <div class="col-auto d-flex">
                        <button class="btn btn-sm btn-primary" type="button" data-list-pagination="prev"><span>Previous</span></button>
                        <button class="btn btn-sm btn-primary px-4 ms-2" type="button" data-list-pagination="next"><span>Next</span></button>
                    </div>
                </div>
            </div>
        </div>
            <div class="fade tab-pane" id="card-view" role="tabpanel" aria-labelledby="cardView" data-list='{"valueNames":["client","subject","status","priority","agent"],"page":4,"pagination":true}'>
                <div class="card-body p-0">
                    <div class="form-check d-none">
                        <input class="form-check-input" id="checkbox-bulk-card-tickets-select" type="checkbox" data-bulk-select='{"body":"card-ticket-body","actions":"table-ticket-actions","replacedElement":"table-ticket-replace-element"}' />
                    </div>
                    <div class="list bg-body-tertiary p-x1 d-flex flex-column gap-3" id="card-ticket-body">
                        @foreach (var unt in unit_list)
                        {
                            <div class="bg-white dark__bg-1100 d-md-flex d-xl-inline-block d-xxl-flex align-items-center p-x1 rounded-3 shadow-sm card-view-height">
                                <div class="d-flex align-items-start align-items-sm-center">
                                    <div class="form-check me-2 me-xxl-3 mb-0">
                                        <input class="form-check-input" type="checkbox" id="card-view-tickets-0" data-bulk-select-row="data-bulk-select-row" />
                                        <a @onclick="()=>EditLoadData(unt)" class="btn btn-falcon-default btn-sm" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"><span class="fas fa-external-link-alt" data-fa-transform="shrink-3"></span><span class="d-none d-sm-inline-block d-xl-none d-xxl-inline-block ms-1"></span></a>
                                    </div><a class="d-none d-sm-block" href="app/support-desk/contact-details.html">

                                    </a>
                                    <div class="ms-1 ms-sm-3">
                                        <p class="fw-semi-bold mb-3 mb-sm-2">@unt.UnitName</p>

                                    </div>
                                </div>


                            </div>
                        }


                </div>
                <div class="text-center d-none" id="tickets-card-fallback">
                    <p class="fw-bold fs-8 mt-3">No ticket found</p>
                </div>
            </div>
            <div class="card-footer">
                <div class="row align-items-center">
                    <div class="pagination d-none"></div>
                    <div class="col"><span class="d-none d-sm-inline-block me-2 fs-10" data-list-info="data-list-info"></span></div>
                    <div class="col-auto d-flex">
                        <button class="btn btn-sm btn-primary" type="button" data-list-pagination="prev"><span>Previous</span></button>
                        <button class="btn btn-sm btn-primary px-4 ms-2" type="button" data-list-pagination="next"><span>Next</span></button>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>


</div>
 
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
 
<script>
    window.showDeleteConfirmation = function () {
        return Swal.fire({
            title: 'Are you sure?',
            text: 'You won\'t be able to revert this!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            return result.isConfirmed; // Return true if confirmed, false otherwise
        });
    }

    window.showSuccessMessage = function () {
        return Swal.fire({
            title: 'Deleted!',
            text: 'Your file has been deleted.',
            icon: 'success'
        });
    }
     

</script>


@code {
    private Pms.Models.Entity.Inventory.Unit unit = new Pms.Models.Entity.Inventory.Unit();
    [Inject]
    protected IJSRuntime JSRuntime { get; set; }
    [Inject]
    UnitService unitService { get; set; }
    List<Pms.Models.Entity.Inventory.Unit> unit_list = new List<Pms.Models.Entity.Inventory.Unit>();

    public string SaveMessage { get; set; }
    private bool isLoading = true;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadUnits();

    }

    private async Task LoadUnits()
    {
        try
        {
            unit_list = (await unitService.Get(null, null, null, null, 1, 10)).ToList();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task SaveOrUpdate()
    {
        try
        {
            if (unit.UnitId == 0)
            {
                unit.EntryDateTime = DateTimeHelper.CurrentDateTime();
                unit.EntryBy = UserInfo.UserId;
                unit.BranchId = CompanyInfo.BranchId;
                unit.UnitId = await unitService.Save(unit);
            }
            else
            {
                unit.BranchId = CompanyInfo.BranchId;
                unit.LastModifyDate = DateTimeHelper.CurrentDateTime();
                unit.LastModifyBy = UserInfo.UserId;
                await unitService.Update(unit);
            }
            // Clear the form after save/update
            await LoadUnits(); // Reload orders after save/update
            unit = new Pms.Models.Entity.Inventory.Unit();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }




    private async void EditLoadData(Pms.Models.Entity.Inventory.Unit unt)
    {

        // var editObj =await unitService.GetOrderById(order.OrderId);
        unit = unt;
    }

    private async Task DeleteItem(long unitId)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("showDeleteConfirmation");
        if (confirmed)
        {
            try
            {
                bool result = await unitService.Delete(unitId);
                if (result)
                {
                    await JSRuntime.InvokeVoidAsync("showSuccessMessage");
                    await LoadUnits();
                }
                else
                {
                    errorMessage = $"Failed to delete order with ID {unitId}.";
                }
            }
            catch (Exception ex)
            {
                errorMessage = ex.Message;
            }
        }
        else
        {
            
        }
    }

     
    private void onSearch(string OrderId)
    {
        /// OrderList = OrderList.Where(w => w.orderNo == OrderId).ToList();
    }

    private void onRefersh()
    {
        unit = new Pms.Models.Entity.Inventory.Unit();
    }
}
